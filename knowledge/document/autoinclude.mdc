---
description: 使いやすい入力インターフェースの実装方法（Auto Include）
globs: "**/*.{blocs.html,html}"
---
# 使いやすい入力インターフェースの実装方法（Auto Include）
# **ai-\*** クラス一覧
入力フォームに `ai-*` クラスを指定するだけで、便利な機能を自動的に追加できます。これにより、ユーザーにとって使いやすいインターフェースを簡単に作成でき、テンプレートの記述もすっきりします。`resources/views/admin/autoinclude` フォルダに、`ai-*` クラス名に対応した `.html` テンプレートを追加することで、独自の `ai-*` クラスを作成できます。`ai-` を除いたクラス名がテンプレートのファイル名になります（例：`ai-datepicker` クラスの場合は `datepicker.html`）。テンプレート内では `data-bloc` 属性を定義せず、ファイルの内容全体がそのまま読み込まれるようにしてください。`data-bloc` を使わず、HTMLの内容がそのまま挿入される形式です。

|クラス|役割|
|:-----------|:-----------|
|ai-datepicker|日付選択用のカレンダー入力になります。|
|ai-timepicker|日付と時間を選べる入力になります。|
|ai-phone|電話番号の入力時に自動で区切り（ハイフン）を入れます。|
|ai-select2|検索機能付きのプルダウンメニューになります。選択肢が多い場合に便利です。|
|ai-upload|ファイルをアップロードできる入力フォームになります。|

## サンプルコード
```html
<input type="text" id="date" name="date" class="form-control ai-datepicker" />
<input type="text" id="date_time" name="date_time" class="form-control ai-timepicker" />
<input type="text" id="phone" name="phone" class="form-control ai-phone" />
```

## 回答例
- **user**
検索できるプルダウンメニューを作成したい。
- **assistant**
`ai-select2` クラスを使えば、検索機能付きのプルダウンメニューを簡単に実装できます。選択肢が多い場合でも、ユーザーがキーワードで絞り込めるので便利です。
```html
<select name="pulldown" class="form-control ai-select2">
</select>
```
- **assistant**
コントローラー側で `addOption` を使えば、選択肢を動的に追加することも可能です。これにより、状況に応じて柔軟にメニュー内容を変更できます。
---
- **user**
複数選択できるプルダウンメニューを作成したい。
- **assistant**
複数選択できるプルダウンメニューは、`ai-select2` クラスを使うことで簡単に実装できます。このクラスを使うと、選択肢が多い場合でもキーワード検索で絞り込みができるため、ユーザーにとって使いやすくなります。
- **assistant**
複数選択を可能にするには、`multiple` 属性を指定します。選択された値を配列で受け取るために、`name` 属性は `pulldown[]` のように記述します。
```html
<select name="pulldown[]" class="form-control ai-select2" multiple>
</select>
```
- **assistant**
コントローラー側で `addOption` を使えば、選択肢を動的に追加することも可能です。これにより、状況に応じて柔軟にメニュー内容を変更できます。
---
- **user**
`tooltip` を表示したい。
- **assistant**
Bootstrapの `tooltip` 機能を使えば、アイコンやボタンなどにマウスを乗せたときに補足情報を表示できます。Laravel の翻訳機能と組み合わせることで、言語ごとに異なるメッセージを表示することも可能です。以下のように記述することで、ERROR というツールチップが表示されます。
```html
<i class="fa-solid fa-ban" data-bs-toggle="tooltip" data-bs-original-title="ERROR"></i>
```
- **assistant**
BLOCSの `lang()` 関数を使えば、翻訳ファイルに登録された文字列を `tooltip` に表示できます。以下の場合、`template:admin_user_invalid_title` に登録された翻訳文字列が、現在の言語設定に応じて表示されます。
```html
<i class="fa-solid fa-ban" data-bs-toggle="tooltip" :data-bs-original-title=lang("template:admin_user_invalid_title")></i>
```
---
