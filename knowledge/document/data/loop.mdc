---
description: 配列の要素数に応じてHTMLタグを繰り返す方法
globs: "**/*.{blocs.html,html}"
---
# 配列の要素数に応じてHTMLタグを繰り返す方法
## **data-loop** の使い方
`data-loop` 属性を使うと、指定した配列やオブジェクトの要素数に応じて、HTMLタグを繰り返し表示できます。これは、テーブルやリストなどの繰り返し表示に便利です。この属性は、タグ記法とコメント記法の両方で使用できます。
繰り返し処理の中では、Laravelのループ変数（例：`$loop->index`、`$loop->first`、`$loop->last`）が使用できます。
また、`data-loop` で指定した配列名の単数形を使って、各要素のデータにアクセスできます。
もし、単数形以外の名前でデータを扱いたい場合は、`data-assign` 属性で任意の変数名を指定できます。

### サンプルコード
`data-loop` は繰り返し表示を簡潔に記述できる便利な属性です。Laravelのループ変数を活用することで、インデックスや先頭・末尾の判定も可能です。
```html
<table>
	<tbody>
	<tr data-loop=$people>
		<td><!-- $loop->index --></td>
		<td><!-- $person->name --></td>
		<td><!-- $person->age --></td>
	</tr>
	</tbody>
</table>
```

```html
<table>
	<tbody>
	<!-- data-loop=$people -->
	<tr>
		<td><!-- $loop->index --></td>
		<td><!-- $person->name --></td>
		<td><!-- $person->age --></td>
	</tr>
	<!-- data-endloop -->
	</tbody>
</table>
```

`data-assign` を使えば、より柔軟に変数名を設定できます。
```html
<table>
	<tbody>
	<tr data-loop=$knowledge data-assign=$item>
		<td><!-- $loop->index --></td>
		<td><!-- $item->name --></td>
		<td><!-- $item->age --></td>
	</tr>
	</tbody>
</table>
```

## 回答例
- **user**
`data-loop` でアクセスする変数名を指定したい。
- **assistant**
`data-loop` を使って配列の繰り返し処理を行う際、通常は配列名の単数形を使って各要素にアクセスできます。しかし、配列名が 単複同型（例：`$knowledge` や `$news` など）の場合や、任意の変数名で要素にアクセスしたい場合は、`data-assign` 属性を使って変数名を明示的に指定する必要があります。
```html
<table>
	<tbody>
	<tr data-loop=$people data-assign=$item>
		<td><!-- $loop->index --></td>
		<td><!-- $item->name --></td>
		<td><!-- $item->age --></td>
	</tr>
	</tbody>
</table>
```
---
- **user**
配列の変数名が単複同型の場合は、どうすればいいですか？
- **assistant**
配列名が `$knowledge` のように 単数形と複数形が同じ（単複同型）の場合、`data-loop` の中で要素を参照する際に、自動的な単数形変換ができません。そのため、繰り返し処理内で個々の要素にアクセスするには、`data-assign` 属性を使って変数名を明示的に指定する必要があります。
```html
<table>
	<tbody>
	<tr data-loop=$knowledge data-assign=$item>
		<td><!-- $loop->index --></td>
		<td><!-- $item->name --></td>
		<td><!-- $item->age --></td>
	</tr>
	</tbody>
</table>
```
---
