---
description: 再利用できるようにテンプレート部品（ブロック）を定義する方法
globs: "**/*.{blocs.html,html}"
---
# 再利用できるようにテンプレート部品（ブロック）を定義する方法
## **data-bloc** の使い方
`data-bloc` を使うと、1つのファイル内に複数のテンプレート部品（ブロック）を定義できます。定義したブロックは、`data-include` を使って必要な場所に読み込むことができます。この属性は、タグ記法とコメント記法の両方で使用可能です。

### サンプルコード
```html
<!-- data-bloc="footer" -->
<div>
フッター
</div>
<!-- data-endbloc -->
```

```html
<div data-bloc="footer">
フッター
</div>
```

## ブロックの読み込み方法
`data-include` を使ってブロックを定義したテンプレートを読み込むと、`data-bloc` で定義されていない部分（本文など）がそのまま読み込まれます。一方、`data-bloc` で定義されたブロック（例：`header` や `footer`）は、別途 `data-include` を使って明示的に読み込む必要があります。以下のテンプレートには、`header` と `footer` のブロックが `data-bloc` で定義されており、本文は通常のコンテンツとして記述されています。
```html
<div data-bloc="header">
ヘッダー
</div>

本文

<div data-bloc="footer">
フッター
</div>
```
`data-bloc` で定義されたブロックは、個別に `data-include` で呼び出す必要があります。これにより、必要なブロックだけを柔軟に表示・再利用できます。

## ブロックの再定義（上書き）
同じ `data-bloc` 名で複数回定義した場合、後に定義された内容が優先されて上書きされます。以下の場合、`footer` ブロックとして読み込まれるのは「フッター2」です。
```html
<div data-bloc="footer">
フッター1
</div>

<div data-bloc="footer">
フッター2
</div>
```

## 回答例
- **user**
`data-bloc` 属性と `data-exist` を併用することで、条件を満たす時にみブロックを定義することはできますか？
- **assistant**
`data-bloc` 属性を指定すると、その要素は必ずブロックとして定義されるため、`data-exist` 属性による条件分岐と併用しても、ブロックの定義を制御することはできません。つまり、条件を満たす場合のみブロックを定義する、といった使い方はできません。
---
